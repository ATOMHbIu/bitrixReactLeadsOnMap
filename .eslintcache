[{"D:\\dev\\moscow\\src\\reportWebVitals.js":"1","D:\\dev\\moscow\\src\\App.js":"2","D:\\dev\\moscow\\src\\components\\map.js":"3","D:\\dev\\moscow\\src\\components\\toolBar.js":"4","D:\\dev\\moscow\\src\\elements\\slider.js":"5","D:\\dev\\moscow\\src\\index.js":"6","D:\\dev\\moscow\\src\\data\\moscow.js":"7"},{"size":362,"mtime":1606476261636,"results":"8","hashOfConfig":"9"},{"size":1799,"mtime":1607438962209,"results":"10","hashOfConfig":"9"},{"size":1783,"mtime":1607439056726,"results":"11","hashOfConfig":"9"},{"size":1898,"mtime":1607348021724,"results":"12","hashOfConfig":"9"},{"size":642,"mtime":1606488677292,"results":"13","hashOfConfig":"9"},{"size":288,"mtime":1606808595501,"results":"14","hashOfConfig":"9"},{"size":7632,"mtime":1607439113951,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"qx77ow",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\moscow\\src\\reportWebVitals.js",[],["34","35"],"D:\\dev\\moscow\\src\\App.js",["36","37","38","39"],"D:\\dev\\moscow\\src\\components\\map.js",["40","41","42","43","44","45","46"],"D:\\dev\\moscow\\src\\components\\toolBar.js",["47"],"import React, {useState,useEffect} from 'react'\r\nimport Slider from '../elements/slider'\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment'\r\nimport ru from 'date-fns/locale/ru';\r\n// registerLocale('ru', ru)\r\n\r\nconst ToolBar = ({dateStart, dateEnd, newData})=>{\r\n    const [type, setType] = useState('lead')\r\n    const [startDate, setStartDate] = useState(moment(dateStart).toDate());\r\n    const [endDate, setEndDate] = useState(moment(dateEnd).toDate());\r\n\r\n    const settings={\r\n        type:type,\r\n        startDate:startDate,\r\n        endDate:endDate,\r\n    }\r\n\r\n    const click=(e)=>{\r\n        newData(settings)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log('end updated')\r\n    },[endDate])\r\n\r\n    const updateTime=(type, newDate)=>{\r\n        switch (type){\r\n            case 'start':\r\n                setStartDate(newDate)\r\n                console.log(startDate);\r\n                break;\r\n            case 'end':\r\n                setEndDate(newDate);\r\n                console.log(endDate);\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"toolBar\">\r\n            <Slider\r\n                leftTitle=\"Лиды\"\r\n                rightTitle=\"Сделки\"\r\n            />\r\n\r\n            <div className=\"dates\">\r\n                <div className=\"dateStart\">Начало: <DatePicker locale={ru} dateFormat=\"dd-MM-yyyy\" selected={startDate} onChange={e=>updateTime('start', e)} /></div>\r\n                <div className=\"dateEnd\">Конец: <DatePicker locale={ru} dateFormat=\"dd-MM-yyyy\" selected={endDate} onChange={e=>updateTime('end',e)} /></div>\r\n            </div>\r\n            <div className=\"button show\"\r\n                onClick={(e)=>click(e)}\r\n            >Показать</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBar;",["48","49"],"D:\\dev\\moscow\\src\\elements\\slider.js",[],"D:\\dev\\moscow\\src\\index.js",[],["50","51"],"D:\\dev\\moscow\\src\\data\\moscow.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":37,"nodeType":"58","messageId":"59","endLine":1,"endColumn":43},{"ruleId":"56","severity":1,"message":"60","line":11,"column":31,"nodeType":"58","messageId":"59","endLine":11,"endColumn":39},{"ruleId":"61","severity":1,"message":"62","line":37,"column":6,"nodeType":"63","endLine":37,"endColumn":16,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":61,"column":66,"nodeType":"67","endLine":61,"endColumn":150},{"ruleId":"56","severity":1,"message":"68","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"69","line":1,"column":38,"nodeType":"58","messageId":"59","endLine":1,"endColumn":53},{"ruleId":"56","severity":1,"message":"70","line":1,"column":55,"nodeType":"58","messageId":"59","endLine":1,"endColumn":72},{"ruleId":"56","severity":1,"message":"71","line":2,"column":40,"nodeType":"58","messageId":"59","endLine":2,"endColumn":47},{"ruleId":"56","severity":1,"message":"72","line":6,"column":12,"nodeType":"58","messageId":"59","endLine":6,"endColumn":19},{"ruleId":"56","severity":1,"message":"73","line":7,"column":12,"nodeType":"58","messageId":"59","endLine":7,"endColumn":17},{"ruleId":"56","severity":1,"message":"74","line":8,"column":18,"nodeType":"58","messageId":"59","endLine":8,"endColumn":25},{"ruleId":"56","severity":1,"message":"75","line":10,"column":18,"nodeType":"58","messageId":"59","endLine":10,"endColumn":25},{"ruleId":"52","replacedBy":"76"},{"ruleId":"54","replacedBy":"77"},{"ruleId":"52","replacedBy":"78"},{"ruleId":"54","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'setDates' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["82"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useLayoutEffect' is defined but never used.","'componentDidMount' is defined but never used.","'Polygon' is defined but never used.","'mainMap' is assigned a value but never used.","'ymaps' is assigned a value but never used.","'setPoly' is assigned a value but never used.","'setType' is assigned a value but never used.",["80"],["81"],["80"],["81"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [fetchData, settings]",{"range":"85","text":"86"},[905,915],"[fetchData, settings]"]